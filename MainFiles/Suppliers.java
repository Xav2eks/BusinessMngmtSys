/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.cprog_exer6;


import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Dell
 */
public class Suppliers extends javax.swing.JFrame {

    String[][] supplier = new String [100][10];
    String[][] purchaseOrder = new String[100][7];
    
    public Suppliers() {
        initComponents();
    }
    
    public Suppliers(String s) {
        initComponents();
        SearchSupplier(s);
    }
    
    int supplierOrderCounter = 0;
    String[] newPo = new String[7];
    
    public void addNewSupplierOrder(String productType, String productDesc, String quantity, String unitCost, String date) {
        int[] selectedRow = sTable.getSelectedRows();
        
        Cprog_Exer6 a = new Cprog_Exer6();
        String[][] poXml = a.readFromXmlPurchaseOrder();
        
        if (poXml != null) {
            supplierOrderCounter = poXml.length;
        }

        purchaseOrder[supplierOrderCounter][0] = sTable.getValueAt(selectedRow[0], 0).toString();
        purchaseOrder[supplierOrderCounter][1] = String.valueOf(supplierOrderCounter + 1);
        purchaseOrder[supplierOrderCounter][2] = productType;
        purchaseOrder[supplierOrderCounter][3] = productDesc;
        purchaseOrder[supplierOrderCounter][4] = quantity;
        purchaseOrder[supplierOrderCounter][5] = unitCost;
        purchaseOrder[supplierOrderCounter][6] = date;
        
        for(int i = 0; i < supplierOrderCounter + 1; i++) {
            newPo[0] = purchaseOrder[supplierOrderCounter][0];
            newPo[1] = purchaseOrder[supplierOrderCounter][1];
            newPo[2] = purchaseOrder[supplierOrderCounter][2];
            newPo[3] = purchaseOrder[supplierOrderCounter][3];
            newPo[4] = purchaseOrder[supplierOrderCounter][4];
            newPo[5] = purchaseOrder[supplierOrderCounter][5];
            newPo[6] = purchaseOrder[supplierOrderCounter][6];
        }
        
        Cprog_Exer6.appendToXml("pos", "po", newPo);
        
        supplierOrderCounter++;
    }
    
    public String[] createSupplierOrdersRow(int orderIndex) {
        
        return new String[] {
            purchaseOrder[orderIndex][1], // PO ID
            purchaseOrder[orderIndex][2], // PROD TYPE
            purchaseOrder[orderIndex][3], // PROD DESC
            purchaseOrder[orderIndex][4], // QUANTITY
            purchaseOrder[orderIndex][5], // UNIT COST
            String.valueOf(Integer.parseInt(purchaseOrder[orderIndex][4]) * Integer.parseInt(purchaseOrder[orderIndex][5])), // TOT COST
            purchaseOrder[orderIndex][6]  // DATE
        };
    }
    
    public void showSupplierOrders() {
        DefaultTableModel supplier_Table2 = (DefaultTableModel) sTable2.getModel();
        int[] selectedRow = sTable.getSelectedRows();

        Cprog_Exer6 a = new Cprog_Exer6();
        String[][] poXml = a.readFromXmlPurchaseOrder();
        
        if (poXml != null) {
            supplierOrderCounter = poXml.length;
        }
        
        supplier_Table2.setRowCount(0);
                
        for (int i = 0; i < supplierOrderCounter; i++) {
            if(purchaseOrder[i][0].equals(sTable.getValueAt(selectedRow[0], 0).toString())) {
            
                String[] item = createSupplierOrdersRow(i);
                supplier_Table2.addRow(item);
            }
        }
       
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
    private void messageBox(String msg, String titlebar) {
        JOptionPane.showMessageDialog(null,msg,titlebar,JOptionPane.INFORMATION_MESSAGE);
    }
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        id = new javax.swing.JTextField();
        sName = new javax.swing.JTextField();
        sContact = new javax.swing.JTextField();
        sPhone = new javax.swing.JTextField();
        sEmail = new javax.swing.JTextField();
        sPayment = new javax.swing.JTextField();
        sProductsSupplied = new javax.swing.JTextField();
        sRating = new javax.swing.JTextField();
        sDateAdded = new javax.swing.JTextField();
        sLastDate = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        sTable = new javax.swing.JTable();
        saveBtn = new javax.swing.JButton();
        deleteBtn = new javax.swing.JButton();
        updateBtn = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        sTable2 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel1.setText("Supplier ID");

        jLabel2.setText("Supplier Name");

        jLabel3.setText("Contact Person");

        jLabel4.setText("Phone Number");

        jLabel5.setText("Email Address");

        jLabel6.setText("Payment Terms");

        jLabel7.setText("Products Supplied");

        jLabel8.setText("Rating / Priority");

        jLabel9.setText("Date Added");

        jLabel10.setText("Last Transaction Date");

        id.setEditable(false);
        id.setBackground(new java.awt.Color(204, 204, 204));

        sContact.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sContactActionPerformed(evt);
            }
        });

        sProductsSupplied.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sProductsSuppliedActionPerformed(evt);
            }
        });

        sLastDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sLastDateActionPerformed(evt);
            }
        });

        sTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Id", "Name", "ContactPer", "Number", "Email"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        sTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                sTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(sTable);

        saveBtn.setText("Save");
        saveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveBtnActionPerformed(evt);
            }
        });

        deleteBtn.setText("Delete");
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });

        updateBtn.setText("Edit");
        updateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBtnActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel11.setText("SUPPLIER FORM");

        sTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "PO ID", "Prod Type", "Prod Desc", "Quantity", "Unit Cost", "Total Cost", "Delivery Date"
            }
        ));
        jScrollPane2.setViewportView(sTable2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(97, 97, 97)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel10)
                    .addComponent(jLabel9)
                    .addComponent(jLabel8)
                    .addComponent(jLabel7)
                    .addComponent(jLabel6)
                    .addComponent(jLabel5)
                    .addComponent(jLabel4)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1)
                    .addComponent(saveBtn)
                    .addComponent(deleteBtn)
                    .addComponent(updateBtn))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(id)
                            .addComponent(sName)
                            .addComponent(sContact)
                            .addComponent(sPhone)
                            .addComponent(sEmail)
                            .addComponent(sPayment)
                            .addComponent(sProductsSupplied)
                            .addComponent(sRating)
                            .addComponent(sDateAdded, javax.swing.GroupLayout.DEFAULT_SIZE, 145, Short.MAX_VALUE)
                            .addComponent(sLastDate))
                        .addGap(71, 71, 71)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 754, Short.MAX_VALUE)
                            .addComponent(jScrollPane2))))
                .addContainerGap(43, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(45, 45, 45)
                                .addComponent(jLabel11)
                                .addGap(32, 32, 32)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel1)
                                    .addComponent(id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel2)
                                    .addComponent(sName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel3)
                                    .addComponent(sContact, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel4)
                                    .addComponent(sPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel5)
                                    .addComponent(sEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel6)
                                    .addComponent(sPayment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel7)
                                    .addComponent(sProductsSupplied, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel8)
                                    .addComponent(sRating, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel9)
                                    .addComponent(sDateAdded, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel10)
                                    .addComponent(sLastDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addComponent(saveBtn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(updateBtn))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(109, 109, 109)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(deleteBtn)
                        .addGap(0, 109, Short.MAX_VALUE)))
                .addGap(26, 26, 26))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void sContactActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sContactActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sContactActionPerformed

    private void sLastDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sLastDateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sLastDateActionPerformed

    private void sTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sTableMouseClicked
        int[] selectedRow = sTable.getSelectedRows();
        
        String selectedId = sTable.getValueAt(selectedRow[0], 0).toString();
        
        id.setText(sTable.getValueAt(selectedRow[0], 0).toString());
        sName.setText(sTable.getValueAt(selectedRow[0], 1).toString());
        sContact.setText(sTable.getValueAt(selectedRow[0], 2).toString());
        sPhone.setText(sTable.getValueAt(selectedRow[0], 3).toString());
        sEmail.setText(sTable.getValueAt(selectedRow[0], 4).toString());
        
        String selectedPayment = String.valueOf(supplier[Integer.parseInt(selectedId) - 1][5]);
        sPayment.setText(selectedPayment);
        
        String selectedProductsSupplied = String.valueOf(supplier[Integer.parseInt(selectedId) - 1][6]);
        sProductsSupplied.setText(selectedProductsSupplied);
 
        String selectedRating = String.valueOf(supplier[Integer.parseInt(selectedId) - 1][7]);
        sRating.setText(selectedRating);

        String selectedDate = String.valueOf(supplier[Integer.parseInt(selectedId) - 1][8]);
        sDateAdded.setText(selectedDate);
        
        String selectedLastDate = String.valueOf(supplier[Integer.parseInt(selectedId) - 1][9]);
        sLastDate.setText(selectedLastDate);
        
        showSupplierOrders();
             
    }//GEN-LAST:event_sTableMouseClicked

    static String[] newSupplier = new String [10];
    
    private void updateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBtnActionPerformed
        DefaultTableModel supplier_Table = (DefaultTableModel) sTable.getModel(); 

        Cprog_Exer6 a = new Cprog_Exer6();
        String[][] suppliersXml = a.readFromXmlSuppliers();

        if (suppliersXml != null) {
            counter = suppliersXml.length;
        }

        for (int i = 0; i < counter; i++) {
            if (supplier[i][0].equals(id.getText())) {
                Cprog_Exer6.deleteRowFromXml("suppliers", "supplier", "field1", supplier[i][0]);

                String iden = supplier[i][0];

                supplier[i][0] = iden;
                supplier[i][1] = sName.getText();
                supplier[i][2] = sContact.getText();
                supplier[i][3] = sPhone.getText();
                supplier[i][4] = sEmail.getText();
                supplier[i][5] = sPayment.getText();
                supplier[i][6] = sProductsSupplied.getText();
                supplier[i][7] = sRating.getText();
                supplier[i][8] = sDateAdded.getText();
                supplier[i][9] = sLastDate.getText();
            }
        }

        for (int i = 0; i < suppliersXml.length; i++) {
            Cprog_Exer6.deleteRowFromXml("suppliers", "supplier", "field1", suppliersXml[i][0]);
        }

        for (int i = 0; i < counter; i++) {
            if (supplier[i][0] != null) {
                for (int j = 0; j < 10; j++) {
                    newSupplier[j] = supplier[i][j];
                }
                Cprog_Exer6.appendToXml("suppliers", "supplier", newSupplier);
            }
        }

        supplier_Table.setRowCount(0);
        for (int i = 0; i < counter; i++) {
            if (supplier[i][0] != null) {
                supplier_Table.addRow(supplier[i]);  
            }
        }
    }//GEN-LAST:event_updateBtnActionPerformed

    int counter = 0;

    public void SearchSupplier(String searchValue) {
        DefaultTableModel supplier_Table = (DefaultTableModel) sTable.getModel();
        
        for(int modelRow = 0; modelRow < supplier_Table.getRowCount(); modelRow++) {
            String targetRow = sTable.getValueAt(modelRow, 1).toString();
            if(targetRow != null && targetRow.equals(searchValue)) {
                sTable.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
                sTable.getSelectionModel().setSelectionInterval(modelRow, modelRow);
                sTable.scrollRectToVisible(sTable.getCellRect(modelRow, 0, true));               
                
            }
            
        }
        
    }
    
    String[] newSuppliers = new String[10];
    
    private void saveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveBtnActionPerformed
        DefaultTableModel supplier_Table = (DefaultTableModel) sTable.getModel(); 

        Cprog_Exer6 a = new Cprog_Exer6();
        String[][] suppliersXml = a.readFromXmlSuppliers();
        
        if (suppliersXml != null) {
            counter = suppliersXml.length;
        }
        
        id.setText(String.valueOf(counter + 1));
         
        if(counter == 0){
          supplier_Table.setRowCount(0);
        }

        supplier[counter][0] = id.getText();
        supplier[counter][1] = sName.getText();
        supplier[counter][2] = sContact.getText();
        supplier[counter][3] = sPhone.getText();
        supplier[counter][4] = sEmail.getText();
        supplier[counter][5] = sPayment.getText();
        supplier[counter][6] = sProductsSupplied.getText();
        supplier[counter][7] = sRating.getText();
        supplier[counter][8] = sDateAdded.getText();
        supplier[counter][9] = sLastDate.getText();
        
        int[] supplierIDArray = new int[counter + 1];
       
        for(int i = 0; i < counter + 1; i++) {
            supplierIDArray[i] = Integer.parseInt(supplier[i][0]); 
        }
        
        for(int i = 0; i < supplierIDArray.length; i++) {
            for(int j = 0; j < supplierIDArray.length - 1; j++) {
                if(supplierIDArray[j] > supplierIDArray[j + 1]){
                    int temp = supplierIDArray[j + 1];
                    supplierIDArray[j + 1] = supplierIDArray[j];
                    supplierIDArray[j] = temp;    
                }     
            }
        }
        
        
        for(int num = 0; num < counter; num++) {
            if(supplierIDArray[num] != num+1){
                id.setText(String.valueOf(num + 1));
                supplier[counter][0] = String.valueOf(num + 1);
                break;
            }
         }
        
        for (int i = 0; i < counter + 1; i++) {
            newSuppliers[0] = supplier[i][0];
            newSuppliers[1] = supplier[i][1];
            newSuppliers[2] = supplier[i][2];
            newSuppliers[3] = supplier[i][3];
            newSuppliers[4] = supplier[i][4];
            newSuppliers[5] = supplier[i][5];
            newSuppliers[6] = supplier[i][6];
            newSuppliers[7] = supplier[i][7];
            newSuppliers[8] = supplier[i][8];
            newSuppliers[9] = supplier[i][9];
        }
        
//        messageBox("Save Record?","Record");

        Cprog_Exer6.appendToXml("suppliers", "supplier", newSuppliers);
        
        String[] item = {supplier[counter][0], supplier[counter][1], supplier[counter][2], supplier[counter][3], supplier[counter][4]};
        supplier_Table.addRow(item);
        counter++;     
    }//GEN-LAST:event_saveBtnActionPerformed

    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed
        DefaultTableModel supplier_Table = (DefaultTableModel) sTable.getModel(); 
        DefaultTableModel supplierTable2 = (DefaultTableModel) sTable2.getModel(); 
 
        Cprog_Exer6 a = new Cprog_Exer6();
        String[][] suppliersXml = a.readFromXmlSuppliers();
        
        if (suppliersXml != null) {
            counter = suppliersXml.length;
        }
        
        String deleteId = id.getText();
        
        for(int x = 0; x < counter; x++) {
            int y = x;
            if(supplier[x][0].equals(id.getText())) {
                while(y < counter){
                    supplier[y][0] = supplier[y+1][0];
                    supplier[y][1] = supplier[y+1][1];
                    supplier[y][2] = supplier[y+1][2];
                    supplier[y][3] = supplier[y+1][3];
                    supplier[y][4] = supplier[y+1][4];
                    supplier[y][5] = supplier[y+1][4];
                    supplier[y][6] = supplier[y+1][4];
                    supplier[y][7] = supplier[y+1][4];
                    supplier[y][8] = supplier[y+1][4];
                    supplier[y][9] = supplier[y+1][4];
                    y++;
                }
                break;
            }
        }
        
        counter--;
        supplier_Table.setRowCount(0);
        
        for(int i = 0; i < counter; i++){
           if(supplier[i][0] != null) 
             supplier_Table.addRow(supplier[i]);  
        }
        
        Cprog_Exer6.deleteRowFromXml("suppliers", "supplier", "field1", deleteId);
        
        supplierTable2.setRowCount(0);
        
    }//GEN-LAST:event_deleteBtnActionPerformed

    private void sProductsSuppliedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sProductsSuppliedActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sProductsSuppliedActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        Cprog_Exer6 a = new Cprog_Exer6();
        DefaultTableModel supplierTable1 = (DefaultTableModel) sTable.getModel();
        
        String[][] suppliersXml = a.readFromXmlSuppliers();
        supplierTable1.setRowCount(0);

        for (int i = 0; i < suppliersXml.length; i++) {
            String[] item = {suppliersXml[i][0], suppliersXml[i][1], suppliersXml[i][2], suppliersXml[i][3], suppliersXml[i][4]};
            
            supplier[i][0] = suppliersXml[i][0];
            supplier[i][1] = suppliersXml[i][1];
            supplier[i][2] = suppliersXml[i][2];
            supplier[i][3] = suppliersXml[i][3];
            supplier[i][4] = suppliersXml[i][4];
            supplier[i][5] = suppliersXml[i][5];
            supplier[i][6] = suppliersXml[i][6];
            supplier[i][7] = suppliersXml[i][7];
            supplier[i][8] = suppliersXml[i][8];
            supplier[i][9] = suppliersXml[i][9];


            supplierTable1.addRow(item);
        }  
            
        DefaultTableModel supplierTable2 = (DefaultTableModel) sTable2.getModel();
        
        String[][] poXml = a.readFromXmlPurchaseOrder();
        supplierTable2.setRowCount(0);
        
        for (int i = 0; i < poXml.length; i++) {

            purchaseOrder[i][0] = poXml[i][0];
            purchaseOrder[i][1] = poXml[i][1];
            purchaseOrder[i][2] = poXml[i][2];
            purchaseOrder[i][3] = poXml[i][3];
            purchaseOrder[i][4] = poXml[i][4];
            purchaseOrder[i][5] = poXml[i][5];
            purchaseOrder[i][6] = poXml[i][6];

        }          
            
    }//GEN-LAST:event_formWindowOpened

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Suppliers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Suppliers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Suppliers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Suppliers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Suppliers().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton deleteBtn;
    private javax.swing.JTextField id;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField sContact;
    private javax.swing.JTextField sDateAdded;
    private javax.swing.JTextField sEmail;
    private javax.swing.JTextField sLastDate;
    private javax.swing.JTextField sName;
    private javax.swing.JTextField sPayment;
    private javax.swing.JTextField sPhone;
    private javax.swing.JTextField sProductsSupplied;
    private javax.swing.JTextField sRating;
    private javax.swing.JTable sTable;
    private javax.swing.JTable sTable2;
    private javax.swing.JButton saveBtn;
    private javax.swing.JButton updateBtn;
    // End of variables declaration//GEN-END:variables
}
